generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum JenisKelamin {
  LAKI_LAKI
  PEREMPUAN
}

enum StatusPPDB {
  PENDING
  DITERIMA
  DITOLAK
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String   @id @default(cuid())
  name          String
  username      String?  @unique
  email         String   @unique
  emailVerified Boolean  @default(false)
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Custom fields
  namaLengkap String?
  role        Role      @default(ADMIN)
  aktif       Boolean   @default(true)
  lastLogin   DateTime?

  accounts          Account[]
  sessions          Session[]
  beritaCreated     Berita[]     @relation("BeritaCreatedBy")
  pengumumanCreated Pengumuman[] @relation("PengumumanCreatedBy")

  @@map("user")
}

model Account {
  id                    String    @id @default(cuid())
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, providerId])
  @@map("account")
}

model Session {
  id        String   @id @default(cuid())
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ipAddress String?
  userAgent String?
  userId    String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Verification {
  id         String   @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("verification")
}

model Siswa {
  id           String       @id @default(cuid())
  namaLengkap  String
  nis          String       @unique
  jenisKelamin JenisKelamin
  tempatLahir  String
  tanggalLahir DateTime
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@map("siswa")
}

model Guru {
  id           String       @id @default(cuid())
  namaLengkap  String
  nik          String       @unique
  jenisKelamin JenisKelamin
  tempatLahir  String
  tanggalLahir DateTime
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@map("guru")
}

model SambutanKepalaSekolah {
  id        String   @id @default(cuid())
  judul     String
  konten    String   @db.Text
  gambar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sambutan_kepala_sekolah")
}

model VisiMisi {
  id        String   @id @default(cuid())
  visi      String   @db.Text
  misi      String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("visi_misi")
}

model Sejarah {
  id        String   @id @default(cuid())
  judul     String
  konten    String   @db.Text
  gambar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sejarah")
}

model Filosofi {
  id        String   @id @default(cuid())
  judul     String
  konten    String   @db.Text
  gambar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("filosofi")
}

model StrukturOrganisasi {
  id        String   @id @default(cuid())
  judul     String
  gambar    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("struktur_organisasi")
}

model Fasilitas {
  id        String   @id @default(cuid())
  nama      String
  deskripsi String   @db.Text
  gambar    String?
  aktif     Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("fasilitas")
}

model Ekstrakurikuler {
  id         String   @id @default(cuid())
  nama       String
  deskripsi  String   @db.Text
  gambar     String?
  pembimbing String?
  jadwal     String?
  aktif      Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("ekstrakurikuler")
}

model OutingClass {
  id        String   @id @default(cuid())
  judul     String
  deskripsi String   @db.Text
  lokasi    String
  tanggal   DateTime
  gambar    String?
  peserta   String?
  aktif     Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("outing_class")
}

model Berita {
  id          String   @id @default(cuid())
  judul       String
  konten      String   @db.Text
  ringkasan   String?
  gambar      String?
  penulis     String
  tanggalPost DateTime @default(now())
  published   Boolean  @default(false)
  views       Int      @default(0)
  createdBy   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  creator User? @relation("BeritaCreatedBy", fields: [createdBy], references: [id])

  @@map("berita")
}

model Pengumuman {
  id          String   @id @default(cuid())
  judul       String
  konten      String   @db.Text
  gambar      String?
  penting     Boolean  @default(false)
  tanggalPost DateTime @default(now())
  published   Boolean  @default(false)
  views       Int      @default(0)
  createdBy   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  creator User? @relation("PengumumanCreatedBy", fields: [createdBy], references: [id])

  @@map("pengumuman")
}

model Galeri {
  id        String   @id @default(cuid())
  judul     String
  deskripsi String?
  gambar    String
  kategori  String?
  tanggal   DateTime @default(now())
  aktif     Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("galeri")
}

model PPDB {
  id                String       @id @default(cuid())
  namaLengkap       String
  tempatLahir       String
  tanggalLahir      DateTime
  jenisKelamin      JenisKelamin
  alamat            String       @db.Text
  noTelepon         String
  email             String?
  namaOrangTua      String
  pekerjaanOrangTua String
  asalSekolah       String
  nilaiRapor        Float?
  berkasPendukung   String?
  status            StatusPPDB   @default(PENDING)
  catatan           String?
  tanggalDaftar     DateTime     @default(now())
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt

  @@map("ppdb")
}

model Kontak {
  id        String   @id @default(cuid())
  alamat    String   @db.Text
  telepon   String
  email     String
  website   String?
  facebook  String?
  instagram String?
  twitter   String?
  youtube   String?
  jamBuka   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("kontak")
}

model Pengaturan {
  id               String   @id @default(cuid())
  namaSekolah      String
  logoSekolah      String?
  favicon          String?
  deskripsiSekolah String?  @db.Text
  metaKeywords     String?
  metaDescription  String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("pengaturan")
}
